<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>-->

    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
        <property name="driverClassName" value="${db.jdbc.driver}"/>
        <property name="url" value="${db.jdbc.url}"/>
        <property name="username" value="${db.jdbc.username}"/>
        <property name="password" value="${db.jdbc.password}"/>
        <property name="initialSize" value="5"/>
        <property name="validationQuery" value="SELECT 1"/>
        <property name="testWhileIdle" value="true"/>
        <property name="removeAbandoned" value="true"/>
    </bean>

    <jdbc:embedded-database id="dataSource2" type="H2">
        <jdbc:script location="classpath:/db/tplSpringDaoSchema.sql"/>
        <jdbc:script location="classpath:/db/tplSpringDaoData.sql"/>
    </jdbc:embedded-database>

    <!--
        <bean id="dataSourceHSQLDB" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${jdbc.hsqldb.driverClassName}"/>
            <property name="url" value="${jdbc.hsqldb.databaseurl}"/>
            <property name="username" value="${jdbc.hsqldb.username}"/>
            <property name="password" value="${jdbc.hsqldb.password}"/>
        </bean>
        <bean id="dataSourceH2" class="org.springframework.jdbc.datasource.DriverManagerDataSource"
              p:driverClassName="${jdbc.h2.driverClassName}"
              p:url="${jdbc.h2.databaseurl}"
              p:username="${jdbc.h2.username}"
              p:password="${jdbc.h2.password}"
        />
        <bean id="transactionManagerSpring" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSourceHSQLDB"/>
        </bean>
    -->

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="setupDb" class="ua.org.gostroy.internal.security.acl.DatabaseSeeder" >
        <constructor-arg ref="jdbcTemplate" />
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan"
                  value="ua.org.gostroy.entity"/>
<!--
        <!-- to use Hibernate without packagesToScan -->
        <property name="configLocation" value="classpath:/etc/hibernate.cfg.xml" />
        <property name="configurationClass" value="org.hibernate.cfg.AnnotationConfiguration"/>
-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${db.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${db.hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${db.hibernate.hbm2ddl.auto}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>


    <bean id="persistenceExceptionTranslationPostProcessor"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

</beans>