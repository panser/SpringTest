<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--<global-method-security secured-annotations="enabled" />-->
    <debug />

    <!--<http pattern="/" security="none"/>-->
    <!--<http pattern="/login" security="none"/>-->
    <!--<http pattern="/logout" security="none"/>-->
    <!--<http pattern="/timeout" security="none"/>-->
    <http pattern="/errors/**" security="none"/>
    <http pattern="/resources/**" security="none"/>
    <http pattern="/test/**" security="none"/>
    <http access-denied-page="/errors/403.html" use-expressions="true" authentication-manager-ref="authenticationManagerInMemory" realm="UserList">
        <anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />

        <!--<intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        <intercept-url pattern="/" access="permitAll"/>
        <intercept-url pattern="/login" access="permitAll"/>
        <intercept-url pattern="/logout" access="permitAll"/>
        <intercept-url pattern="/timeout" access="permitAll"/>
        <!--<intercept-url pattern="/errors/**" access="permitAll"/>-->
        <!--<intercept-url pattern="/resources/**" access="permitAll"/>-->
        <!--<intercept-url pattern="/test/**" access="permitAll"/>-->

        <intercept-url pattern="/user/" access="permitAll"/>
        <intercept-url pattern="/user/list" access="permitAll"/>
        <intercept-url pattern="/user/userInfo" access="permitAll"/>
        <intercept-url pattern="/user/add" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/user/edit/**" access="hasAnyRole('ROLE_USER', 'ROLE_ADMIN')"/>
        <intercept-url pattern="/user/delete/**" access="hasAnyRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')" requires-channel="any" />

        <!--<openid-login />-->
        <form-login login-page="/login"
                    authentication-success-handler-ref="authenticationSuccessHandler"
                    authentication-failure-handler-ref="authenticationFailureHandler"/>
        <http-basic />
        <logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" delete-cookies="JSESSIONID"/>
        <!--<logout logout-url="/logout" delete-cookies="JSESSIONID"/>-->
        <remember-me />
        <headers/>
        <!--<csrf/>-->

        <session-management invalid-session-url="/timeout">
            <concurrency-control max-sessions="1"/>
        </session-management>
    </http>

    <authentication-manager alias="authenticationManagerInMemory">
        <authentication-provider>
            <user-service>
                <user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER" />
                <user name="user1" password="1111" authorities="ROLE_USER" />
                <user name="user2" password="2222" disabled="true" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider>
    </authentication-manager>
<!--
    <authentication-manager alias="authenticationManagerJDBC">
        <authentication-provider >
            <jdbc-user-service data-source-ref="dataSource"
               users-by-username-query="select name as username, password, status as enabled from users where name=?"
               authorities-by-username-query="select users.name as username, roles.role as authorities from users, roles where users.id = roles.id and users.name = ? "/>
            <password-encoder hash="md5"/>
        </authentication-provider>
    </authentication-manager>
-->
<!--
    <authentication-manager alias="authenticationManagerMyOwn">
        <authentication-provider user-service-ref='myUserDetailsService'/>
    </authentication-manager>
-->

    <beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <beans:property name="useReferer" value="false" />
        <beans:property name="defaultTargetUrl" value="/user/list" />
    </beans:bean>
    <beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/login?login_error=true" />
    </beans:bean>
    <beans:bean id="logoutSuccessHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
        <beans:property name="useReferer" value="true" />
        <beans:property name="targetUrlParameter" value="logout=true" />
        <beans:property name="defaultTargetUrl" value="/user/list" />
    </beans:bean>

</beans:beans>